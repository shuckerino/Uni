Problem wie Erzeuger Verbraucher
Erzeuger liefert Zeichenfolgen => Buffer-Reader liefert Zeilen => Endverbraucher
Pseudocode:

// Shared-Memory
Int groeße                // Für jeden Buffer-Reader genau einen
Char* bufferArray // Für jeden Buffer-Reader genau einen

Char* endverbraucher

//Semaphore
Semaphore fullGroeße = 0          // Für jeden Buffer-Reader genau einen
Semaphore emptyGroeße = 1    // Für jeden Buffer-Reader genau einen

Semaphore fullArray = 0             // Für jeden Buffer-Reader genau einen
Semaphore emptyArray =  1     // Für jeden Buffer-Reader genau einen

Semaphore fullEndverbraucher = 0 // Genau einen
Semaphore emptyEndverbraucher = 1 // Genau einen

// Methode des Erzeugers
Void Erzeuger() {
	While(true) {
		Wait(emptyGroeße)
		SchreibeGroeße_h(groeße)
		Signal(fullGroeße)
		
		While(!MessageDone_H()) {
			Wait(emptyArray)
			Int length = findLength_h(message)
			addMessage_h(message, length)
			Signal(fullArray)
		}
	}
}

// Methode des Buffers
Void BufferReader() {
	While(true) {
		Wait(fullGroeße)
		Int große = removeGroeße()
		Signal(emptyGroeße)
		
		While(!MessageDone_h()) {
			Wait(fullArray)
			Char* message = removeMessage(length)
			Signal(emptyArray)
			addToFullMessage_h(message)
		}
			Wait(emptyEndverbraucher)
			sendFullMessage_H(FullMessage)
			Signal(FullEndverbraucher)
	}
}

// Methode des Endverbrauchers
Void Endverbrauchers() {
	While(true) {
		Wait(FullEndverbraucher)
		removeFullMessage_h()
		Siganl(emptyEndverbraucher)
	}
}
